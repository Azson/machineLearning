class Solution(object):
    def minCost(self, grid):
        """
        :type grid: List[List[int]]
        :rtype: int
        """
        m = len(grid)
        n = len(grid[0])
        dp = [[m + n for i in range(n)] for j in range(m)]
        import copy
        def step(pos, dir):
            new_pos = copy.deepcopy(pos)
            if dir == 1:
                new_pos[1] += 1
            elif dir == 2:
                new_pos[1] -= 1
            elif dir == 3:
                new_pos[0] += 1
            else:
                new_pos[0] -= 1

            return new_pos

        def is_ok(pos):
            if 0 <= pos[0] < m and 0 <= pos[1] < n:
                return True
            return False

        def dfs(pos, cost, last):

            if pos[0] == m - 1 and pos[1] == n - 1:
                dp[pos[0]][pos[1]] = min(cost, dp[pos[0]][pos[1]])
                return True

            if cost >= dp[pos[0]][pos[1]]:
                return False
            dp[pos[0]][pos[1]] = cost
            # print(pos, cost, dp[pos[0]][pos[1]])
            mx = False
            for i in range(1, 5):

                tmp = 0 if i == grid[pos[0]][pos[1]] else 1
                new_pos = step(pos, i)

                if not is_ok(new_pos) or (last and new_pos[0] == last[0] and new_pos[1] == last[1]):
                    continue
                mx = dfs(new_pos, cost + tmp, pos)

            return mx

        dfs([0, 0], 0, None)
        # print(dp)
        return dp[m - 1][n - 1]


if __name__ == '__main__':
    obj = Solution()
    grid = [[2,3,2,4,4,1,3,2,1,4,2,3,1,2,2,1],[3,1,1,2,1,2,1,1,3,2,1,1,2,2,4,4],[3,1,2,4,4,2,4,3,4,4,4,4,4,4,2,4],[4,1,4,1,1,2,2,4,1,2,4,4,2,2,2,3],[1,2,1,2,2,3,3,1,3,3,2,1,3,1,1,1],[3,2,2,4,3,1,1,3,4,3,1,2,4,3,2,3],[1,2,2,1,4,3,4,4,1,4,1,1,3,4,3,1],[3,2,4,2,1,1,1,3,3,4,2,4,3,4,2,2],[1,1,4,3,2,1,4,2,3,2,3,2,1,4,2,2],[1,1,1,1,1,2,4,2,2,3,2,4,2,1,2,2],[4,2,1,2,2,3,2,4,2,1,4,4,1,1,2,1],[2,4,3,1,1,3,3,3,2,3,1,1,2,2,4,3],[2,3,2,3,1,3,4,3,1,3,1,3,3,1,2,4],[3,2,2,4,1,1,4,3,1,1,1,2,4,1,4,2],[4,1,1,1,2,4,1,2,2,4,2,3,1,1,2,1],[4,2,1,1,2,2,4,4,1,3,2,2,3,4,1,1],[3,3,1,2,3,2,3,4,1,2,4,2,4,4,4,4],[4,3,2,1,2,1,2,2,4,4,3,3,1,3,1,3],[3,2,3,4,1,1,3,1,2,3,2,2,3,3,4,1],[1,4,2,2,1,1,1,3,2,3,1,4,2,4,2,2],[1,3,2,2,4,3,3,3,1,4,2,3,4,2,3,2],[4,4,4,1,4,4,1,2,3,2,3,4,3,4,3,4],[1,2,1,3,3,1,3,4,4,4,2,1,3,3,4,4],[2,2,3,3,1,4,1,2,4,3,3,4,4,1,4,1],[4,2,1,2,3,4,2,4,3,3,3,1,3,3,1,4],[1,2,2,2,4,3,2,1,2,4,2,1,1,2,1,3],[3,1,4,1,1,4,3,4,4,4,3,3,4,2,3,4],[3,2,3,3,1,2,4,4,3,2,1,3,4,3,2,4],[4,1,3,3,1,4,3,4,3,2,3,3,3,1,3,2],[3,2,3,2,1,4,2,4,1,3,4,2,3,2,2,3],[1,3,2,4,1,1,3,3,1,3,2,4,4,1,4,1],[4,3,3,2,1,2,1,2,4,4,2,4,3,3,4,4],[3,1,3,3,4,2,3,4,3,3,3,1,2,3,2,1],[2,1,4,1,1,1,3,3,1,1,2,3,4,4,1,2],[2,4,1,1,2,1,2,4,1,3,4,2,2,2,3,2],[1,4,1,3,3,4,1,1,1,4,1,2,1,3,4,4],[3,1,1,3,3,3,4,1,4,4,2,2,3,2,1,3],[2,4,3,1,3,2,1,2,4,2,4,1,4,1,4,4],[2,4,4,1,4,4,1,1,1,3,3,2,2,3,4,1],[4,3,1,2,3,3,4,4,4,3,1,2,3,4,2,3],[2,3,2,2,1,3,3,3,2,1,2,1,4,4,4,2],[3,4,4,3,1,1,1,1,1,2,2,1,3,2,4,1],[4,1,1,1,2,2,2,3,2,1,2,2,3,1,4,2],[2,3,1,1,2,1,2,4,4,4,3,1,1,2,1,2],[3,3,2,1,1,2,3,4,3,1,3,3,4,4,2,1],[3,2,3,1,4,1,1,4,4,4,4,2,4,1,2,1],[1,1,2,4,1,1,3,2,4,2,2,2,4,4,4,1],[1,2,4,3,2,1,4,4,4,1,4,4,3,4,3,3],[4,2,3,1,3,3,4,4,4,1,2,3,4,1,2,4],[1,3,1,1,4,2,3,2,2,2,3,3,4,3,4,3],[4,3,4,1,2,2,2,3,4,2,4,4,2,3,1,1],[2,2,2,1,2,1,2,3,1,1,4,1,3,4,1,1],[1,1,4,2,1,1,1,4,4,1,2,4,3,1,1,1],[3,2,3,2,1,2,3,2,2,2,4,3,4,4,3,2],[3,4,2,2,1,1,4,3,3,3,2,4,3,2,3,4],[2,2,1,2,3,4,3,4,1,4,4,4,3,2,3,2],[1,3,1,1,4,1,4,4,3,3,1,2,3,1,2,3],[2,1,2,2,4,1,1,2,1,3,1,3,4,4,3,1],[1,3,3,1,4,3,4,3,3,3,2,4,4,3,4,1],[3,2,1,3,2,3,2,4,3,2,1,4,4,3,3,2],[1,1,4,4,4,3,1,3,2,2,3,3,3,4,3,1],[4,2,2,1,4,1,2,2,4,2,3,3,2,4,2,4],[3,2,2,3,1,3,1,2,2,2,1,1,2,4,3,1],[1,3,3,2,4,1,4,2,4,1,1,1,3,2,2,1],[3,3,3,3,1,4,3,1,3,1,3,2,2,3,3,4],[2,2,4,1,3,2,1,1,2,4,2,1,1,2,3,1],[4,1,1,3,3,4,2,1,2,1,3,3,4,1,1,2],[2,4,4,1,3,3,1,3,3,3,4,2,4,4,4,2],[3,3,1,1,4,2,1,1,4,1,2,1,1,2,3,1],[1,2,4,4,2,3,4,4,4,3,3,1,4,1,3,4],[3,3,3,2,2,2,3,3,3,3,2,1,1,3,1,1],[3,3,3,2,4,4,2,2,4,2,1,2,3,2,2,1],[2,1,2,2,1,2,4,4,2,1,2,3,4,2,2,1],[4,4,4,2,1,2,2,3,2,1,2,3,1,2,4,3],[4,4,1,3,3,4,2,2,2,3,2,4,2,1,3,2],[4,3,1,3,1,2,3,1,3,1,4,4,1,4,4,1],[1,3,3,1,3,2,2,4,3,4,2,1,2,4,1,3],[1,2,3,4,3,2,3,4,3,2,1,2,3,3,2,3],[4,4,2,3,3,3,2,3,4,1,3,2,3,4,3,3],[3,3,4,1,1,2,1,4,2,1,3,1,2,1,2,3],[1,1,2,2,2,2,3,2,4,4,2,1,4,3,2,3],[2,4,1,3,4,2,3,1,2,3,4,4,4,3,2,4],[4,4,1,3,1,2,1,4,3,3,1,2,1,3,2,2],[3,1,4,3,1,3,1,3,3,1,1,3,2,1,3,2],[4,1,4,4,2,2,1,2,4,4,2,2,1,2,2,2],[4,2,1,1,2,3,4,1,4,4,3,1,1,1,4,4],[4,3,4,1,2,3,4,3,2,3,3,2,1,1,2,4],[2,1,3,1,3,1,3,1,1,3,3,3,3,3,1,1],[2,1,3,1,1,2,1,3,2,3,4,3,3,3,3,1],[1,2,2,2,2,2,3,2,1,2,4,4,2,4,3,3],[1,1,1,4,2,4,2,3,3,2,3,1,1,4,2,1],[2,3,1,4,3,3,1,3,1,1,1,2,4,2,3,2],[4,1,4,2,4,1,3,4,2,1,2,2,2,4,3,2],[3,1,4,2,1,3,2,1,3,4,4,2,3,1,2,4],[4,4,3,2,1,1,3,2,2,4,2,4,1,4,2,2],[2,3,2,3,1,3,4,1,1,1,3,3,3,3,2,4],[3,3,3,1,2,4,1,4,1,1,3,1,3,2,1,1],[3,2,4,1,1,1,1,2,1,3,4,3,3,2,1,1],[4,1,1,4,1,4,3,4,3,4,2,3,1,3,2,2]]
    print(obj.minCost(grid))